{"version":3,"names":["getUrl","url","common_constant","constant","api","__wxConfig","envVersion","disposeResponse","response","isDialog","arguments","length","undefined","blob","statusCode","data","errorMsg","isSuccess","code","msg","error","common_storage","clearAll","common_vendor","index","showToast","title","icon","result","Error","request","_ref","_asyncToGenerator2","_regeneratorRuntime2","mark","_callee","method","config","requestConfig","wrap","_callee$","_context","prev","next","header","_objectSpread2","APPLICATION_ID","headers","getToken","timeout","sent","abrupt","responseType","t0","stop","_x","_x2","_x3","_x4","apply","get","params","post","put","del","request$1"],"sources":["request.ts"],"sourcesContent":["import constant from './constant';\nimport { getToken, clearAll } from './storage';\n\ninterface RequestConfig {\n    isDialog?: boolean;\n    headers?: any;\n    params?: any;\n    responseType?: string;\n}\n\nconst getUrl = (url: string) => {\n    return constant.api[__wxConfig.envVersion] + url;\n};\n\nconst disposeResponse = (response: any, isDialog = true, blob = false) => {\n    const { statusCode, data } = response;\n\n    let errorMsg = '';\n    let isSuccess = true;\n\n    if (statusCode === 200 && data.code && data.code !== 200) {\n        isSuccess = false;\n        errorMsg = data.msg || data.error;\n    } else if (statusCode === 401) {\n        clearAll();\n        uni.showToast({\n            title: \"请先登录\",\n            icon: 'error'\n        });\n        return;\n    } else if (statusCode !== 200) {\n        isSuccess = false;\n        errorMsg = data;\n    }\n\n    let result: { data: object; error: string } | any = {\n        data: data.data,\n        error: errorMsg\n    };\n\n    if (isDialog) {\n        if (!isSuccess) {\n            uni.showToast({\n                title: errorMsg,\n                icon: 'error'\n            });\n            throw new Error(errorMsg);\n        }\n        result = data.data;\n    }\n\n    // blob 下载逻辑在小程序环境可能需要使用其他方式实现\n    return result;\n};\n\nconst request = async (method: 'GET' | 'POST' | 'PUT' | 'DELETE', url: string, data?: any, config?: RequestConfig) => {\n    url = getUrl(url);\n    \n    const requestConfig: any = {\n        url,\n        method,\n        data,\n        header: {\n            'X-Application-Id': constant.APPLICATION_ID,\n            ...(config?.headers || {}),\n            'Authorization': getToken()\n        },\n        timeout: 60000\n    };\n\n    try {\n        const response = await uni.request(requestConfig);\n\t\t\n        return disposeResponse(response, config?.isDialog, config?.responseType === 'blob');\n    } catch (error) {\n        uni.showToast({\n            title: '网络请求失败：' + error,\n            icon: 'none'\n        });\n        throw error;\n    }\n};\n\nconst get = (url: string, params?: any, config?: RequestConfig) => {\n    return request('GET', url, params, config);\n};\n\nconst post = (url: string, data?: any, config?: RequestConfig) => {\n    return request('POST', url, data, config);\n};\n\nconst put = (url: string, data?: any, config?: RequestConfig) => {\n    return request('PUT', url, data, config);\n};\n\nconst del = (url: string, params?: any, config?: RequestConfig) => {\n    return request('DELETE', url, params, config);\n};\n\nexport default {\n    get,\n    post,\n    put,\n    del\n};\n"],"mappings":";;;;;;;;;AAUA,IAAMA,MAAA,GAAS,SAATA,OAAUC,GAAA,EAAgB;EAC5B,OAAOC,eAAA,CAASC,QAAA,CAAAC,GAAA,CAAIC,UAAA,CAAWC,UAAU,IAAIL,GAAA;AACjD;AAEA,IAAMM,eAAA,GAAkB,SAAlBA,gBAAmBC,QAAA,EAAiD;EAAA,IAAlCC,QAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAW;EAAA,IAAMG,IAAA,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAO;EACtD,IAAEI,UAAA,GAAqBN,QAAA,CAArBM,UAAA;IAAYC,IAAA,GAASP,QAAA,CAATO,IAAA;EAEpB,IAAIC,QAAA,GAAW;EACf,IAAIC,SAAA,GAAY;EAEhB,IAAIH,UAAA,KAAe,OAAOC,IAAA,CAAKG,IAAA,IAAQH,IAAA,CAAKG,IAAA,KAAS,KAAK;IAC1CD,SAAA;IACDD,QAAA,GAAAD,IAAA,CAAKI,GAAA,IAAOJ,IAAA,CAAKK,KAAA;EAAA,WACrBN,UAAA,KAAe,KAAK;IAClBO,cAAA,CAAAC,QAAA;IACTC,aAAA,CAAAC,KAAA,CAAIC,SAAA,CAAU;MACVC,KAAA,EAAO;MACPC,IAAA,EAAM;IAAA,CACT;IACD;EAAA,WACOb,UAAA,KAAe,KAAK;IACfG,SAAA;IACDD,QAAA,GAAAD,IAAA;EACf;EAEA,IAAIa,MAAA,GAAgD;IAChDb,IAAA,EAAMA,IAAA,CAAKA,IAAA;IACXK,KAAA,EAAOJ;EAAA;EAGX,IAAIP,QAAA,EAAU;IACV,IAAI,CAACQ,SAAA,EAAW;MACZM,aAAA,CAAAC,KAAA,CAAIC,SAAA,CAAU;QACVC,KAAA,EAAOV,QAAA;QACPW,IAAA,EAAM;MAAA,CACT;MACK,UAAIE,KAAA,CAAMb,QAAQ;IAC5B;IACAY,MAAA,GAASb,IAAA,CAAKA,IAAA;EAClB;EAGO,OAAAa,MAAA;AACX;AAEA,IAAME,OAAA;EAAA,IAAAC,IAAA,GAAAC,kBAAA,eAAAC,oBAAA,GAAAC,IAAA,CAAU,SAAAC,QAAOC,MAAA,EAA2CnC,GAAA,EAAac,IAAA,EAAYsB,MAAA;IAAA,IAAAC,aAAA,EAAA9B,QAAA;IAAA,OAAAyB,oBAAA,GAAAM,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UACvF1C,GAAA,GAAMD,MAAA,CAAOC,GAAG;UAEVqC,aAAA,GAAqB;YACvBrC,GAAA,EAAAA,GAAA;YACAmC,MAAA,EAAAA,MAAA;YACArB,IAAA,EAAAA,IAAA;YACA6B,MAAA,EAAAC,cAAA,CAAAA,cAAA;cACI,oBAAoB3C,eAAA,CAASC,QAAA,CAAA2C;YAAA,GAC7B,CAAIT,MAAA,oBAAAA,MAAA,CAAQU,OAAA,KAAW,CAAC;cACxB,iBAAiB1B,cAAA,CAAA2B,QAAA;YAAS,EAC9B;YACAC,OAAA,EAAS;UAAA;UAAAR,QAAA,CAAAC,IAAA;UAAAD,QAAA,CAAAE,IAAA;UAAA,OAIcpB,aAAA,CAAAC,KAAA,CAAIM,OAAA,CAAQQ,aAAa;QAAA;UAA1C9B,QAAA,GAAAiC,QAAA,CAAAS,IAAA;UAAA,OAAAT,QAAA,CAAAU,MAAA,WAEC5C,eAAA,CAAgBC,QAAA,EAAU6B,MAAA,oBAAAA,MAAA,CAAQ5B,QAAA,GAAU4B,MAAA,oBAAAA,MAAA,CAAQe,YAAA,MAAiB,MAAM;QAAA;UAAAX,QAAA,CAAAC,IAAA;UAAAD,QAAA,CAAAY,EAAA,GAAAZ,QAAA;UAElFlB,aAAA,CAAAC,KAAA,CAAIC,SAAA,CAAU;YACVC,KAAA,EAAO,YAAAe,QAAA,CAAAY,EAAY;YACnB1B,IAAA,EAAM;UAAA,CACT;UAAA,MAAAc,QAAA,CAAAY,EAAA;QAAA;QAAA;UAAA,OAAAZ,QAAA,CAAAa,IAAA;MAAA;IAAA,GAAAnB,OAAA;EAAA,CAGT;EAAA,gBA1BML,QAAAyB,EAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA;IAAA,OAAA3B,IAAA,CAAA4B,KAAA,OAAAjD,SAAA;EAAA;AAAA,GA0BN;AAEA,IAAMkD,GAAA,GAAM,SAANA,IAAO3D,GAAA,EAAa4D,MAAA,EAAcxB,MAAA,EAA2B;EAC/D,OAAOP,OAAA,CAAQ,OAAO7B,GAAA,EAAK4D,MAAA,EAAQxB,MAAM;AAC7C;AAEA,IAAMyB,IAAA,GAAO,SAAPA,KAAQ7D,GAAA,EAAac,IAAA,EAAYsB,MAAA,EAA2B;EAC9D,OAAOP,OAAA,CAAQ,QAAQ7B,GAAA,EAAKc,IAAA,EAAMsB,MAAM;AAC5C;AAEA,IAAM0B,GAAA,GAAM,SAANA,IAAO9D,GAAA,EAAac,IAAA,EAAYsB,MAAA,EAA2B;EAC7D,OAAOP,OAAA,CAAQ,OAAO7B,GAAA,EAAKc,IAAA,EAAMsB,MAAM;AAC3C;AAEA,IAAM2B,GAAA,GAAM,SAANA,IAAO/D,GAAA,EAAa4D,MAAA,EAAcxB,MAAA,EAA2B;EAC/D,OAAOP,OAAA,CAAQ,UAAU7B,GAAA,EAAK4D,MAAA,EAAQxB,MAAM;AAChD;AAEA,IAAe4B,SAAA;EACXL,GAAA,EAAAA,GAAA;EACAE,IAAA,EAAAA,IAAA;EACAC,GAAA,EAAAA,GAAA;EACAC,GAAA,EAAAA;AACJ","ignoreList":[]}