{"version":3,"file":"common.js","sources":["api/common.ts"],"sourcesContent":["import request from '@/common/request';\n\nexport default {\n    // 获取验证码\n    getCAPTCHACode: async (key: string) =>\n        await request.get(`CAPTCHA/code`, { key }),\n\n    // 获取上传url\n    getUploadUrls: async (params: { extension: string; path: string }[]) =>\n        await request.post(`upload/url`, params),\n\n    // 上传到server\n    uploadToServer: async (\n        file: any,\n        onUploadProgress?: (progress: number) => void\n    ) => {\n        const formData = new FormData();\n        formData.append('files', file);\n        return await request.post(`upload/server`, formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            },\n            onUploadProgress: (progressEvent) => {\n                if (onUploadProgress) {\n                    const percentCompleted = Math.round(\n                        (progressEvent.loaded * 100) / progressEvent.total\n                    );\n                    onUploadProgress(percentCompleted);\n                }\n            }\n        });\n    },\n\n\t// 上传到COS\n\tuploadCOS: async (\n\t\tfile: ArrayBuffer,\n\t\tcontentType: string,\n\t\tuploadUrl: string,\n\t\theaders = {},\n\t\tonUploadProgress?: (progress: number) => void\n\t) => {\n\t\ttry {\n\t\t\t// await uni.uploadFile({\n\t\t\t// \turl: uploadUrl,\n\t\t\t// \tfilePath: filePath,\n\t\t\t// \tname: 'file',\n\t\t\t// \theaders: {\n\t\t\t// \t\t...headers\n\t\t\t// \t},\n\t\t\t// \tformData: {\n\t\t\t// \t\t\"wsl\": \"wsl\"\n\t\t\t// \t}\n\t\t\t// });\n\t\t\tawait uni.request({\n\t\t\t\turl: uploadUrl,\n\t\t\t\tmethod: 'PUT',\n\t\t\t\tdata: file,\n\t\t\t\theader: {\n\t\t\t\t\t'Content-Type': contentType,\n\t\t\t\t\t...headers\n\t\t\t\t},\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tconsole.log(error)\n\t\t\tuni.showToast({\n\t\t\t    title: `文件上传失败：${error}`,\n\t\t\t    icon: 'none'\n\t\t\t});\n\t\t}\n\t}\n};\n"],"names":["request","uni"],"mappings":";;;AAEA,MAAe,SAAA;AAAA;AAAA,EAEX,gBAAgB,OAAO,QACnB,MAAMA,uBAAQ,IAAI,gBAAgB,EAAE,KAAK;AAAA;AAAA,EAG7C,eAAe,OAAO,WAClB,MAAMA,eAAAA,QAAQ,KAAK,cAAc,MAAM;AAAA;AAAA,EAG3C,gBAAgB,OACZ,MACA,qBACC;AACK,UAAA,WAAW,IAAI;AACZ,aAAA,OAAO,SAAS,IAAI;AAC7B,WAAO,MAAMA,eAAAA,QAAQ,KAAK,iBAAiB,UAAU;AAAA,MACjD,SAAS;AAAA,QACL,gBAAgB;AAAA,MACpB;AAAA,MACA,kBAAkB,CAAC,kBAAkB;AACjC,YAAI,kBAAkB;AAClB,gBAAM,mBAAmB,KAAK;AAAA,YACzB,cAAc,SAAS,MAAO,cAAc;AAAA,UAAA;AAEjD,2BAAiB,gBAAgB;AAAA,QACrC;AAAA,MACJ;AAAA,IAAA,CACH;AAAA,EACL;AAAA;AAAA,EAGH,WAAW,OACV,MACA,aACA,WACA,UAAU,IACV,qBACI;AACA,QAAA;AAYH,YAAMC,cAAAA,MAAI,QAAQ;AAAA,QACjB,KAAK;AAAA,QACL,QAAQ;AAAA,QACR,MAAM;AAAA,QACN,QAAQ;AAAA,UACP,gBAAgB;AAAA,UAChB,GAAG;AAAA,QACJ;AAAA,MAAA,CACA;AAAA,aACO,OAAO;AACHA,oBAAAA,MAAA,MAAA,OAAA,uBAAA,KAAK;AACjBA,oBAAAA,MAAI,UAAU;AAAA,QACV,OAAO,UAAU,KAAK;AAAA,QACtB,MAAM;AAAA,MAAA,CACT;AAAA,IACF;AAAA,EACD;AACD;;"}