{"version":3,"file":"tab-bar.js","sources":["components/tab-bar/tab-bar.vue","/Users/wangshuli/workspace/mine/pighand/pighand-AIO/client-applet/components/tab-bar/tab-bar.vue?type=component"],"sourcesContent":["<!--\n    自定义TabBar组件\n    功能：\n    1. 基于pages.json配置自动生成底部导航栏\n    2. 支持路由切换和当前页面状态同步\n    3. 提供点击切换和路由监听功能\n-->\n<template>\n\t<tui-tabbar :current=\"tabBarCurrent\" :tabBar=\"tabBarConfig\" selectedColor=\"#AC9157\" @click=\"tabbarSwitch\"></tui-tabbar>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue'\nimport pageJson from '@/pages.json';\n\n/**\n * 从pages.json中读取tabBar配置并转换为组件所需格式\n * 自动添加路径前缀\"/\"确保路径格式正确\n */\nconst tabBarConfig = ref((pageJson?.tabBar?.list || []).map(item => {\n    return {\n        pagePath: '/' + item.pagePath,      // 页面路径\n        text: item.text,                   // 显示文本\n        iconPath: '/' + item.iconPath,     // 未选中图标\n        selectedIconPath: '/' + item.selectedIconPath  // 选中图标\n    }\n}))\n\n// 当前选中的tab索引\nconst tabBarCurrent = ref(0)\n\n/**\n * 根据当前路由更新tabBarCurrent\n * 通过getCurrentPages()获取当前页面栈，匹配路径更新选中状态\n */\nconst updateTabBarCurrent = () => {\n    const currentPages = getCurrentPages()\n    const currentPage = currentPages[currentPages.length - 1]\n    const currentPath = '/' + currentPage.route\n    \n    const index = tabBarConfig.value.findIndex(item => item.pagePath === currentPath)\n    if (index > -1) {\n        tabBarCurrent.value = index\n    }\n}\n\n/**\n * 组件挂载时的初始化逻辑\n */\nonMounted(() => {\n    // 初始化时更新一次当前选中状态\n    updateTabBarCurrent()\n    \n    // 监听路由变化 - 使用before拦截器提前更新\n    uni.addInterceptor('switchTab', {\n        invoke: (args) => {\n            // 在路由跳转前立即更新tabBarCurrent\n            const targetIndex = tabBarConfig.value.findIndex(item => item.pagePath === args.url)\n            if (targetIndex > -1) {\n                tabBarCurrent.value = targetIndex\n            }\n        },\n        success: () => updateTabBarCurrent()\n    })\n})\n\n/**\n * tab点击切换处理函数\n * @param {Object} e - 点击事件对象，包含index属性\n */\nconst tabbarSwitch = (e) => {\n    // 立即更新当前选中状态，避免异步更新，看起来像卡顿\n    tabBarCurrent.value = e.index\n    \n    uni.switchTab({\n        url: tabBarConfig.value[e.index].pagePath\n    });\n}\n</script>\n\n<style lang=\"scss\" scoped>\n</style>\n","import Component from '/Users/wangshuli/workspace/mine/pighand/pighand-AIO/client-applet/components/tab-bar/tab-bar.vue'\nwx.createComponent(Component)"],"names":["ref","onMounted","uni","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmBA,UAAM,eAAeA,cAAAA,OAAK,0CAAU,WAAV,mBAAkB,SAAQ,CAAE,GAAE,IAAI,UAAQ;AAChE,aAAO;AAAA,QACH,UAAU,MAAM,KAAK;AAAA;AAAA,QACrB,MAAM,KAAK;AAAA;AAAA,QACX,UAAU,MAAM,KAAK;AAAA;AAAA,QACrB,kBAAkB,MAAM,KAAK;AAAA;AAAA,MAChC;AAAA,IACL,CAAC,CAAC;AAGF,UAAM,gBAAgBA,cAAG,IAAC,CAAC;AAM3B,UAAM,sBAAsB,MAAM;AAC9B,YAAM,eAAe,gBAAiB;AACtC,YAAM,cAAc,aAAa,aAAa,SAAS,CAAC;AACxD,YAAM,cAAc,MAAM,YAAY;AAEtC,YAAM,QAAQ,aAAa,MAAM,UAAU,UAAQ,KAAK,aAAa,WAAW;AAChF,UAAI,QAAQ,IAAI;AACZ,sBAAc,QAAQ;AAAA,MACzB;AAAA,IACL;AAKAC,kBAAAA,UAAU,MAAM;AAEZ,0BAAqB;AAGrBC,oBAAG,MAAC,eAAe,aAAa;AAAA,QAC5B,QAAQ,CAAC,SAAS;AAEd,gBAAM,cAAc,aAAa,MAAM,UAAU,UAAQ,KAAK,aAAa,KAAK,GAAG;AACnF,cAAI,cAAc,IAAI;AAClB,0BAAc,QAAQ;AAAA,UACzB;AAAA,QACJ;AAAA,QACD,SAAS,MAAM,oBAAqB;AAAA,MAC5C,CAAK;AAAA,IACL,CAAC;AAMD,UAAM,eAAe,CAAC,MAAM;AAExB,oBAAc,QAAQ,EAAE;AAExBA,oBAAAA,MAAI,UAAU;AAAA,QACV,KAAK,aAAa,MAAM,EAAE,KAAK,EAAE;AAAA,MACzC,CAAK;AAAA,IACL;;;;;;;;;;;;;AC5EA,GAAG,gBAAgBC,SAAS;"}