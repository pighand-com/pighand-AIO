{"version":3,"file":"login.js","sources":["components/user/login.vue","/Users/wangshuli/workspace/mine/pighand/pighand-AIO/client-applet/components/user/login.vue?type=component"],"sourcesContent":["<template>\n    <view class=\"login-wrapper\">\n        <slot></slot>\n\n        <button v-if=\"!isLogin\" class=\"overlay-button\" @click=\"beginLogin\"></button>\n    </view>\n</template>\n\n<script setup>\nimport login from '@/common/login'\nimport { getToken } from '@/common/storage'\nimport { ref, computed, onUnmounted } from 'vue'\n\nconst props = defineProps({\n    item: {\n        type: Array,\n        default: () => ['login']\n    }\n})\n\n// 使用ref创建响应式变量\nconst token = ref(getToken())\n\n// 监听storage变化\nconst handleStorageChange = () => {\n    token.value = getToken()\n}\n\nuni.$on('storage-changed', handleStorageChange)\n\n// 组件卸载时移除事件监听\nonUnmounted(() => {\n    uni.$off('storage-changed', handleStorageChange)\n})\n\n// 使用计算属性计算登录状态\nconst isLogin = computed(() => token.value && props.item.includes('login'))\n\nfunction beginLogin() {\n    login()\n}\n</script>\n\n<style scoped>\n.login-wrapper {\n    position: relative;\n}\n\n.overlay-button {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    opacity: 0;\n    z-index: 1;\n}\n</style>","import Component from '/Users/wangshuli/workspace/mine/pighand/pighand-AIO/client-applet/components/user/login.vue'\nwx.createComponent(Component)"],"names":["ref","getToken","uni","onUnmounted","computed","login"],"mappings":";;;;;;;;;;;;;AAaA,UAAM,QAAQ;AAQd,UAAM,QAAQA,cAAAA,IAAIC,eAAAA,UAAU;AAG5B,UAAM,sBAAsB,MAAM;AAC9B,YAAM,QAAQA,wBAAU;AAAA,IAC5B;AAEAC,kBAAAA,MAAI,IAAI,mBAAmB,mBAAmB;AAG9CC,kBAAAA,YAAY,MAAM;AACdD,0BAAI,KAAK,mBAAmB,mBAAmB;AAAA,IACnD,CAAC;AAGD,UAAM,UAAUE,cAAAA,SAAS,MAAM,MAAM,SAAS,MAAM,KAAK,SAAS,OAAO,CAAC;AAE1E,aAAS,aAAa;AAClBC,yBAAO;AAAA,IACX;;;;;;;;;;;ACvCA,GAAG,gBAAgB,SAAS;"}